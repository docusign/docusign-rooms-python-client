# coding: utf-8

"""
    DocuSign Rooms API - v2

    An API for an integrator to access the features of DocuSign Rooms  # noqa: E501

    OpenAPI spec version: v2
    Contact: devcenter@docusign.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class Permissions(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'can_add_users_to_rooms': 'bool',
        'can_create_rooms': 'bool',
        'can_submit_rooms_for_review': 'bool',
        'can_close_rooms': 'bool',
        'can_reopen_rooms': 'bool',
        'can_delete_owned_rooms': 'bool',
        'auto_access_to_rooms': 'bool',
        'can_export_room_activity_details_people': 'bool',
        'is_visible_in_rooms': 'bool',
        'can_copy_room_details': 'bool',
        'can_edit_any_room_role': 'bool',
        'can_edit_invited_room_role': 'bool',
        'can_edit_room_side': 'bool',
        'can_manage_any_user_room_access': 'bool',
        'can_manage_invited_user_room_access': 'bool',
        'is_hidden_in_room': 'bool',
        'can_manage_room_owners': 'bool',
        'can_delete_rooms': 'bool',
        'can_connect_to_mortgage_cadence': 'bool',
        'can_view_room_details': 'bool',
        'can_view_and_edit_room_details': 'bool',
        'can_send_room_details_to_lone_wolf': 'bool',
        'can_add_documents': 'bool',
        'can_add_documents_from_form_groups': 'bool',
        'can_add_documents_from_form_libraries': 'bool',
        'documents_viewable_by_others_in_room_from_office': 'bool',
        'documents_auto_owned_by_peers': 'bool',
        'can_delete_owned_documents': 'bool',
        'can_manage_shared_docs': 'bool',
        'can_manage_form_groups': 'bool',
        'can_share_docs_not_owned': 'bool',
        'can_add_tasks_to_any_task_lists': 'bool',
        'can_edit_editable_tasks': 'bool',
        'can_edit_any_tasks': 'bool',
        'can_delete_deletable_tasks': 'bool',
        'can_delete_any_tasks': 'bool',
        'can_apply_task_list': 'bool',
        'can_remove_any_task_list': 'bool',
        'can_submit_task_list': 'bool',
        'can_auto_submit_task_list': 'bool',
        'can_review_task_list': 'bool',
        'can_auto_approve_task_list': 'bool',
        'can_manage_task_templates_for_all_regions_all_offices': 'bool',
        'can_apply_room_templates': 'bool',
        'can_add_tasks_to_rooms': 'bool',
        'can_review_any_task': 'bool',
        'can_manage_docs_on_any_task': 'bool',
        'can_add_member_and_set_role_lower_access_level': 'bool',
        'can_add_member_and_set_role_same_access_level': 'bool',
        'can_change_member_role_lower_access_level': 'bool',
        'can_change_member_role_same_access_level': 'bool',
        'can_manage_member_lower_access_level': 'bool',
        'can_manage_member_same_access_level': 'bool',
        'can_remove_company_member_lower_access_level': 'bool',
        'can_remove_company_member_same_access_level': 'bool',
        'can_manage_account': 'bool',
        'can_manage_logo': 'bool',
        'can_manage_roles_and_permissions': 'bool',
        'can_manage_room_details': 'bool',
        'can_manage_room_templates': 'bool',
        'can_manage_integration_settings': 'bool'
    }

    attribute_map = {
        'can_add_users_to_rooms': 'canAddUsersToRooms',
        'can_create_rooms': 'canCreateRooms',
        'can_submit_rooms_for_review': 'canSubmitRoomsForReview',
        'can_close_rooms': 'canCloseRooms',
        'can_reopen_rooms': 'canReopenRooms',
        'can_delete_owned_rooms': 'canDeleteOwnedRooms',
        'auto_access_to_rooms': 'autoAccessToRooms',
        'can_export_room_activity_details_people': 'canExportRoomActivityDetailsPeople',
        'is_visible_in_rooms': 'isVisibleInRooms',
        'can_copy_room_details': 'canCopyRoomDetails',
        'can_edit_any_room_role': 'canEditAnyRoomRole',
        'can_edit_invited_room_role': 'canEditInvitedRoomRole',
        'can_edit_room_side': 'canEditRoomSide',
        'can_manage_any_user_room_access': 'canManageAnyUserRoomAccess',
        'can_manage_invited_user_room_access': 'canManageInvitedUserRoomAccess',
        'is_hidden_in_room': 'isHiddenInRoom',
        'can_manage_room_owners': 'canManageRoomOwners',
        'can_delete_rooms': 'canDeleteRooms',
        'can_connect_to_mortgage_cadence': 'canConnectToMortgageCadence',
        'can_view_room_details': 'canViewRoomDetails',
        'can_view_and_edit_room_details': 'canViewAndEditRoomDetails',
        'can_send_room_details_to_lone_wolf': 'canSendRoomDetailsToLoneWolf',
        'can_add_documents': 'canAddDocuments',
        'can_add_documents_from_form_groups': 'canAddDocumentsFromFormGroups',
        'can_add_documents_from_form_libraries': 'canAddDocumentsFromFormLibraries',
        'documents_viewable_by_others_in_room_from_office': 'documentsViewableByOthersInRoomFromOffice',
        'documents_auto_owned_by_peers': 'documentsAutoOwnedByPeers',
        'can_delete_owned_documents': 'canDeleteOwnedDocuments',
        'can_manage_shared_docs': 'canManageSharedDocs',
        'can_manage_form_groups': 'canManageFormGroups',
        'can_share_docs_not_owned': 'canShareDocsNotOwned',
        'can_add_tasks_to_any_task_lists': 'canAddTasksToAnyTaskLists',
        'can_edit_editable_tasks': 'canEditEditableTasks',
        'can_edit_any_tasks': 'canEditAnyTasks',
        'can_delete_deletable_tasks': 'canDeleteDeletableTasks',
        'can_delete_any_tasks': 'canDeleteAnyTasks',
        'can_apply_task_list': 'canApplyTaskList',
        'can_remove_any_task_list': 'canRemoveAnyTaskList',
        'can_submit_task_list': 'canSubmitTaskList',
        'can_auto_submit_task_list': 'canAutoSubmitTaskList',
        'can_review_task_list': 'canReviewTaskList',
        'can_auto_approve_task_list': 'canAutoApproveTaskList',
        'can_manage_task_templates_for_all_regions_all_offices': 'canManageTaskTemplatesForAllRegionsAllOffices',
        'can_apply_room_templates': 'canApplyRoomTemplates',
        'can_add_tasks_to_rooms': 'canAddTasksToRooms',
        'can_review_any_task': 'canReviewAnyTask',
        'can_manage_docs_on_any_task': 'canManageDocsOnAnyTask',
        'can_add_member_and_set_role_lower_access_level': 'canAddMemberAndSetRoleLowerAccessLevel',
        'can_add_member_and_set_role_same_access_level': 'canAddMemberAndSetRoleSameAccessLevel',
        'can_change_member_role_lower_access_level': 'canChangeMemberRoleLowerAccessLevel',
        'can_change_member_role_same_access_level': 'canChangeMemberRoleSameAccessLevel',
        'can_manage_member_lower_access_level': 'canManageMemberLowerAccessLevel',
        'can_manage_member_same_access_level': 'canManageMemberSameAccessLevel',
        'can_remove_company_member_lower_access_level': 'canRemoveCompanyMemberLowerAccessLevel',
        'can_remove_company_member_same_access_level': 'canRemoveCompanyMemberSameAccessLevel',
        'can_manage_account': 'canManageAccount',
        'can_manage_logo': 'canManageLogo',
        'can_manage_roles_and_permissions': 'canManageRolesAndPermissions',
        'can_manage_room_details': 'canManageRoomDetails',
        'can_manage_room_templates': 'canManageRoomTemplates',
        'can_manage_integration_settings': 'canManageIntegrationSettings'
    }

    def __init__(self, can_add_users_to_rooms=None, can_create_rooms=None, can_submit_rooms_for_review=None, can_close_rooms=None, can_reopen_rooms=None, can_delete_owned_rooms=None, auto_access_to_rooms=None, can_export_room_activity_details_people=None, is_visible_in_rooms=None, can_copy_room_details=None, can_edit_any_room_role=None, can_edit_invited_room_role=None, can_edit_room_side=None, can_manage_any_user_room_access=None, can_manage_invited_user_room_access=None, is_hidden_in_room=None, can_manage_room_owners=None, can_delete_rooms=None, can_connect_to_mortgage_cadence=None, can_view_room_details=None, can_view_and_edit_room_details=None, can_send_room_details_to_lone_wolf=None, can_add_documents=None, can_add_documents_from_form_groups=None, can_add_documents_from_form_libraries=None, documents_viewable_by_others_in_room_from_office=None, documents_auto_owned_by_peers=None, can_delete_owned_documents=None, can_manage_shared_docs=None, can_manage_form_groups=None, can_share_docs_not_owned=None, can_add_tasks_to_any_task_lists=None, can_edit_editable_tasks=None, can_edit_any_tasks=None, can_delete_deletable_tasks=None, can_delete_any_tasks=None, can_apply_task_list=None, can_remove_any_task_list=None, can_submit_task_list=None, can_auto_submit_task_list=None, can_review_task_list=None, can_auto_approve_task_list=None, can_manage_task_templates_for_all_regions_all_offices=None, can_apply_room_templates=None, can_add_tasks_to_rooms=None, can_review_any_task=None, can_manage_docs_on_any_task=None, can_add_member_and_set_role_lower_access_level=None, can_add_member_and_set_role_same_access_level=None, can_change_member_role_lower_access_level=None, can_change_member_role_same_access_level=None, can_manage_member_lower_access_level=None, can_manage_member_same_access_level=None, can_remove_company_member_lower_access_level=None, can_remove_company_member_same_access_level=None, can_manage_account=None, can_manage_logo=None, can_manage_roles_and_permissions=None, can_manage_room_details=None, can_manage_room_templates=None, can_manage_integration_settings=None):  # noqa: E501
        """Permissions - a model defined in Swagger"""  # noqa: E501

        self._can_add_users_to_rooms = None
        self._can_create_rooms = None
        self._can_submit_rooms_for_review = None
        self._can_close_rooms = None
        self._can_reopen_rooms = None
        self._can_delete_owned_rooms = None
        self._auto_access_to_rooms = None
        self._can_export_room_activity_details_people = None
        self._is_visible_in_rooms = None
        self._can_copy_room_details = None
        self._can_edit_any_room_role = None
        self._can_edit_invited_room_role = None
        self._can_edit_room_side = None
        self._can_manage_any_user_room_access = None
        self._can_manage_invited_user_room_access = None
        self._is_hidden_in_room = None
        self._can_manage_room_owners = None
        self._can_delete_rooms = None
        self._can_connect_to_mortgage_cadence = None
        self._can_view_room_details = None
        self._can_view_and_edit_room_details = None
        self._can_send_room_details_to_lone_wolf = None
        self._can_add_documents = None
        self._can_add_documents_from_form_groups = None
        self._can_add_documents_from_form_libraries = None
        self._documents_viewable_by_others_in_room_from_office = None
        self._documents_auto_owned_by_peers = None
        self._can_delete_owned_documents = None
        self._can_manage_shared_docs = None
        self._can_manage_form_groups = None
        self._can_share_docs_not_owned = None
        self._can_add_tasks_to_any_task_lists = None
        self._can_edit_editable_tasks = None
        self._can_edit_any_tasks = None
        self._can_delete_deletable_tasks = None
        self._can_delete_any_tasks = None
        self._can_apply_task_list = None
        self._can_remove_any_task_list = None
        self._can_submit_task_list = None
        self._can_auto_submit_task_list = None
        self._can_review_task_list = None
        self._can_auto_approve_task_list = None
        self._can_manage_task_templates_for_all_regions_all_offices = None
        self._can_apply_room_templates = None
        self._can_add_tasks_to_rooms = None
        self._can_review_any_task = None
        self._can_manage_docs_on_any_task = None
        self._can_add_member_and_set_role_lower_access_level = None
        self._can_add_member_and_set_role_same_access_level = None
        self._can_change_member_role_lower_access_level = None
        self._can_change_member_role_same_access_level = None
        self._can_manage_member_lower_access_level = None
        self._can_manage_member_same_access_level = None
        self._can_remove_company_member_lower_access_level = None
        self._can_remove_company_member_same_access_level = None
        self._can_manage_account = None
        self._can_manage_logo = None
        self._can_manage_roles_and_permissions = None
        self._can_manage_room_details = None
        self._can_manage_room_templates = None
        self._can_manage_integration_settings = None
        self.discriminator = None

        if can_add_users_to_rooms is not None:
            self.can_add_users_to_rooms = can_add_users_to_rooms
        if can_create_rooms is not None:
            self.can_create_rooms = can_create_rooms
        if can_submit_rooms_for_review is not None:
            self.can_submit_rooms_for_review = can_submit_rooms_for_review
        if can_close_rooms is not None:
            self.can_close_rooms = can_close_rooms
        if can_reopen_rooms is not None:
            self.can_reopen_rooms = can_reopen_rooms
        if can_delete_owned_rooms is not None:
            self.can_delete_owned_rooms = can_delete_owned_rooms
        if auto_access_to_rooms is not None:
            self.auto_access_to_rooms = auto_access_to_rooms
        if can_export_room_activity_details_people is not None:
            self.can_export_room_activity_details_people = can_export_room_activity_details_people
        if is_visible_in_rooms is not None:
            self.is_visible_in_rooms = is_visible_in_rooms
        if can_copy_room_details is not None:
            self.can_copy_room_details = can_copy_room_details
        if can_edit_any_room_role is not None:
            self.can_edit_any_room_role = can_edit_any_room_role
        if can_edit_invited_room_role is not None:
            self.can_edit_invited_room_role = can_edit_invited_room_role
        if can_edit_room_side is not None:
            self.can_edit_room_side = can_edit_room_side
        if can_manage_any_user_room_access is not None:
            self.can_manage_any_user_room_access = can_manage_any_user_room_access
        if can_manage_invited_user_room_access is not None:
            self.can_manage_invited_user_room_access = can_manage_invited_user_room_access
        if is_hidden_in_room is not None:
            self.is_hidden_in_room = is_hidden_in_room
        if can_manage_room_owners is not None:
            self.can_manage_room_owners = can_manage_room_owners
        if can_delete_rooms is not None:
            self.can_delete_rooms = can_delete_rooms
        if can_connect_to_mortgage_cadence is not None:
            self.can_connect_to_mortgage_cadence = can_connect_to_mortgage_cadence
        if can_view_room_details is not None:
            self.can_view_room_details = can_view_room_details
        if can_view_and_edit_room_details is not None:
            self.can_view_and_edit_room_details = can_view_and_edit_room_details
        if can_send_room_details_to_lone_wolf is not None:
            self.can_send_room_details_to_lone_wolf = can_send_room_details_to_lone_wolf
        if can_add_documents is not None:
            self.can_add_documents = can_add_documents
        if can_add_documents_from_form_groups is not None:
            self.can_add_documents_from_form_groups = can_add_documents_from_form_groups
        if can_add_documents_from_form_libraries is not None:
            self.can_add_documents_from_form_libraries = can_add_documents_from_form_libraries
        if documents_viewable_by_others_in_room_from_office is not None:
            self.documents_viewable_by_others_in_room_from_office = documents_viewable_by_others_in_room_from_office
        if documents_auto_owned_by_peers is not None:
            self.documents_auto_owned_by_peers = documents_auto_owned_by_peers
        if can_delete_owned_documents is not None:
            self.can_delete_owned_documents = can_delete_owned_documents
        if can_manage_shared_docs is not None:
            self.can_manage_shared_docs = can_manage_shared_docs
        if can_manage_form_groups is not None:
            self.can_manage_form_groups = can_manage_form_groups
        if can_share_docs_not_owned is not None:
            self.can_share_docs_not_owned = can_share_docs_not_owned
        if can_add_tasks_to_any_task_lists is not None:
            self.can_add_tasks_to_any_task_lists = can_add_tasks_to_any_task_lists
        if can_edit_editable_tasks is not None:
            self.can_edit_editable_tasks = can_edit_editable_tasks
        if can_edit_any_tasks is not None:
            self.can_edit_any_tasks = can_edit_any_tasks
        if can_delete_deletable_tasks is not None:
            self.can_delete_deletable_tasks = can_delete_deletable_tasks
        if can_delete_any_tasks is not None:
            self.can_delete_any_tasks = can_delete_any_tasks
        if can_apply_task_list is not None:
            self.can_apply_task_list = can_apply_task_list
        if can_remove_any_task_list is not None:
            self.can_remove_any_task_list = can_remove_any_task_list
        if can_submit_task_list is not None:
            self.can_submit_task_list = can_submit_task_list
        if can_auto_submit_task_list is not None:
            self.can_auto_submit_task_list = can_auto_submit_task_list
        if can_review_task_list is not None:
            self.can_review_task_list = can_review_task_list
        if can_auto_approve_task_list is not None:
            self.can_auto_approve_task_list = can_auto_approve_task_list
        if can_manage_task_templates_for_all_regions_all_offices is not None:
            self.can_manage_task_templates_for_all_regions_all_offices = can_manage_task_templates_for_all_regions_all_offices
        if can_apply_room_templates is not None:
            self.can_apply_room_templates = can_apply_room_templates
        if can_add_tasks_to_rooms is not None:
            self.can_add_tasks_to_rooms = can_add_tasks_to_rooms
        if can_review_any_task is not None:
            self.can_review_any_task = can_review_any_task
        if can_manage_docs_on_any_task is not None:
            self.can_manage_docs_on_any_task = can_manage_docs_on_any_task
        if can_add_member_and_set_role_lower_access_level is not None:
            self.can_add_member_and_set_role_lower_access_level = can_add_member_and_set_role_lower_access_level
        if can_add_member_and_set_role_same_access_level is not None:
            self.can_add_member_and_set_role_same_access_level = can_add_member_and_set_role_same_access_level
        if can_change_member_role_lower_access_level is not None:
            self.can_change_member_role_lower_access_level = can_change_member_role_lower_access_level
        if can_change_member_role_same_access_level is not None:
            self.can_change_member_role_same_access_level = can_change_member_role_same_access_level
        if can_manage_member_lower_access_level is not None:
            self.can_manage_member_lower_access_level = can_manage_member_lower_access_level
        if can_manage_member_same_access_level is not None:
            self.can_manage_member_same_access_level = can_manage_member_same_access_level
        if can_remove_company_member_lower_access_level is not None:
            self.can_remove_company_member_lower_access_level = can_remove_company_member_lower_access_level
        if can_remove_company_member_same_access_level is not None:
            self.can_remove_company_member_same_access_level = can_remove_company_member_same_access_level
        if can_manage_account is not None:
            self.can_manage_account = can_manage_account
        if can_manage_logo is not None:
            self.can_manage_logo = can_manage_logo
        if can_manage_roles_and_permissions is not None:
            self.can_manage_roles_and_permissions = can_manage_roles_and_permissions
        if can_manage_room_details is not None:
            self.can_manage_room_details = can_manage_room_details
        if can_manage_room_templates is not None:
            self.can_manage_room_templates = can_manage_room_templates
        if can_manage_integration_settings is not None:
            self.can_manage_integration_settings = can_manage_integration_settings

    @property
    def can_add_users_to_rooms(self):
        """Gets the can_add_users_to_rooms of this Permissions.  # noqa: E501


        :return: The can_add_users_to_rooms of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_users_to_rooms

    @can_add_users_to_rooms.setter
    def can_add_users_to_rooms(self, can_add_users_to_rooms):
        """Sets the can_add_users_to_rooms of this Permissions.


        :param can_add_users_to_rooms: The can_add_users_to_rooms of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_add_users_to_rooms = can_add_users_to_rooms

    @property
    def can_create_rooms(self):
        """Gets the can_create_rooms of this Permissions.  # noqa: E501


        :return: The can_create_rooms of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_create_rooms

    @can_create_rooms.setter
    def can_create_rooms(self, can_create_rooms):
        """Sets the can_create_rooms of this Permissions.


        :param can_create_rooms: The can_create_rooms of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_create_rooms = can_create_rooms

    @property
    def can_submit_rooms_for_review(self):
        """Gets the can_submit_rooms_for_review of this Permissions.  # noqa: E501


        :return: The can_submit_rooms_for_review of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_submit_rooms_for_review

    @can_submit_rooms_for_review.setter
    def can_submit_rooms_for_review(self, can_submit_rooms_for_review):
        """Sets the can_submit_rooms_for_review of this Permissions.


        :param can_submit_rooms_for_review: The can_submit_rooms_for_review of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_submit_rooms_for_review = can_submit_rooms_for_review

    @property
    def can_close_rooms(self):
        """Gets the can_close_rooms of this Permissions.  # noqa: E501


        :return: The can_close_rooms of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_close_rooms

    @can_close_rooms.setter
    def can_close_rooms(self, can_close_rooms):
        """Sets the can_close_rooms of this Permissions.


        :param can_close_rooms: The can_close_rooms of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_close_rooms = can_close_rooms

    @property
    def can_reopen_rooms(self):
        """Gets the can_reopen_rooms of this Permissions.  # noqa: E501


        :return: The can_reopen_rooms of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_reopen_rooms

    @can_reopen_rooms.setter
    def can_reopen_rooms(self, can_reopen_rooms):
        """Sets the can_reopen_rooms of this Permissions.


        :param can_reopen_rooms: The can_reopen_rooms of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_reopen_rooms = can_reopen_rooms

    @property
    def can_delete_owned_rooms(self):
        """Gets the can_delete_owned_rooms of this Permissions.  # noqa: E501


        :return: The can_delete_owned_rooms of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_delete_owned_rooms

    @can_delete_owned_rooms.setter
    def can_delete_owned_rooms(self, can_delete_owned_rooms):
        """Sets the can_delete_owned_rooms of this Permissions.


        :param can_delete_owned_rooms: The can_delete_owned_rooms of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_delete_owned_rooms = can_delete_owned_rooms

    @property
    def auto_access_to_rooms(self):
        """Gets the auto_access_to_rooms of this Permissions.  # noqa: E501


        :return: The auto_access_to_rooms of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._auto_access_to_rooms

    @auto_access_to_rooms.setter
    def auto_access_to_rooms(self, auto_access_to_rooms):
        """Sets the auto_access_to_rooms of this Permissions.


        :param auto_access_to_rooms: The auto_access_to_rooms of this Permissions.  # noqa: E501
        :type: bool
        """

        self._auto_access_to_rooms = auto_access_to_rooms

    @property
    def can_export_room_activity_details_people(self):
        """Gets the can_export_room_activity_details_people of this Permissions.  # noqa: E501


        :return: The can_export_room_activity_details_people of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_export_room_activity_details_people

    @can_export_room_activity_details_people.setter
    def can_export_room_activity_details_people(self, can_export_room_activity_details_people):
        """Sets the can_export_room_activity_details_people of this Permissions.


        :param can_export_room_activity_details_people: The can_export_room_activity_details_people of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_export_room_activity_details_people = can_export_room_activity_details_people

    @property
    def is_visible_in_rooms(self):
        """Gets the is_visible_in_rooms of this Permissions.  # noqa: E501


        :return: The is_visible_in_rooms of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._is_visible_in_rooms

    @is_visible_in_rooms.setter
    def is_visible_in_rooms(self, is_visible_in_rooms):
        """Sets the is_visible_in_rooms of this Permissions.


        :param is_visible_in_rooms: The is_visible_in_rooms of this Permissions.  # noqa: E501
        :type: bool
        """

        self._is_visible_in_rooms = is_visible_in_rooms

    @property
    def can_copy_room_details(self):
        """Gets the can_copy_room_details of this Permissions.  # noqa: E501


        :return: The can_copy_room_details of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_copy_room_details

    @can_copy_room_details.setter
    def can_copy_room_details(self, can_copy_room_details):
        """Sets the can_copy_room_details of this Permissions.


        :param can_copy_room_details: The can_copy_room_details of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_copy_room_details = can_copy_room_details

    @property
    def can_edit_any_room_role(self):
        """Gets the can_edit_any_room_role of this Permissions.  # noqa: E501


        :return: The can_edit_any_room_role of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_edit_any_room_role

    @can_edit_any_room_role.setter
    def can_edit_any_room_role(self, can_edit_any_room_role):
        """Sets the can_edit_any_room_role of this Permissions.


        :param can_edit_any_room_role: The can_edit_any_room_role of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_edit_any_room_role = can_edit_any_room_role

    @property
    def can_edit_invited_room_role(self):
        """Gets the can_edit_invited_room_role of this Permissions.  # noqa: E501


        :return: The can_edit_invited_room_role of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_edit_invited_room_role

    @can_edit_invited_room_role.setter
    def can_edit_invited_room_role(self, can_edit_invited_room_role):
        """Sets the can_edit_invited_room_role of this Permissions.


        :param can_edit_invited_room_role: The can_edit_invited_room_role of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_edit_invited_room_role = can_edit_invited_room_role

    @property
    def can_edit_room_side(self):
        """Gets the can_edit_room_side of this Permissions.  # noqa: E501


        :return: The can_edit_room_side of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_edit_room_side

    @can_edit_room_side.setter
    def can_edit_room_side(self, can_edit_room_side):
        """Sets the can_edit_room_side of this Permissions.


        :param can_edit_room_side: The can_edit_room_side of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_edit_room_side = can_edit_room_side

    @property
    def can_manage_any_user_room_access(self):
        """Gets the can_manage_any_user_room_access of this Permissions.  # noqa: E501


        :return: The can_manage_any_user_room_access of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_any_user_room_access

    @can_manage_any_user_room_access.setter
    def can_manage_any_user_room_access(self, can_manage_any_user_room_access):
        """Sets the can_manage_any_user_room_access of this Permissions.


        :param can_manage_any_user_room_access: The can_manage_any_user_room_access of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_any_user_room_access = can_manage_any_user_room_access

    @property
    def can_manage_invited_user_room_access(self):
        """Gets the can_manage_invited_user_room_access of this Permissions.  # noqa: E501


        :return: The can_manage_invited_user_room_access of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_invited_user_room_access

    @can_manage_invited_user_room_access.setter
    def can_manage_invited_user_room_access(self, can_manage_invited_user_room_access):
        """Sets the can_manage_invited_user_room_access of this Permissions.


        :param can_manage_invited_user_room_access: The can_manage_invited_user_room_access of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_invited_user_room_access = can_manage_invited_user_room_access

    @property
    def is_hidden_in_room(self):
        """Gets the is_hidden_in_room of this Permissions.  # noqa: E501


        :return: The is_hidden_in_room of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._is_hidden_in_room

    @is_hidden_in_room.setter
    def is_hidden_in_room(self, is_hidden_in_room):
        """Sets the is_hidden_in_room of this Permissions.


        :param is_hidden_in_room: The is_hidden_in_room of this Permissions.  # noqa: E501
        :type: bool
        """

        self._is_hidden_in_room = is_hidden_in_room

    @property
    def can_manage_room_owners(self):
        """Gets the can_manage_room_owners of this Permissions.  # noqa: E501


        :return: The can_manage_room_owners of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_room_owners

    @can_manage_room_owners.setter
    def can_manage_room_owners(self, can_manage_room_owners):
        """Sets the can_manage_room_owners of this Permissions.


        :param can_manage_room_owners: The can_manage_room_owners of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_room_owners = can_manage_room_owners

    @property
    def can_delete_rooms(self):
        """Gets the can_delete_rooms of this Permissions.  # noqa: E501


        :return: The can_delete_rooms of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_delete_rooms

    @can_delete_rooms.setter
    def can_delete_rooms(self, can_delete_rooms):
        """Sets the can_delete_rooms of this Permissions.


        :param can_delete_rooms: The can_delete_rooms of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_delete_rooms = can_delete_rooms

    @property
    def can_connect_to_mortgage_cadence(self):
        """Gets the can_connect_to_mortgage_cadence of this Permissions.  # noqa: E501


        :return: The can_connect_to_mortgage_cadence of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_connect_to_mortgage_cadence

    @can_connect_to_mortgage_cadence.setter
    def can_connect_to_mortgage_cadence(self, can_connect_to_mortgage_cadence):
        """Sets the can_connect_to_mortgage_cadence of this Permissions.


        :param can_connect_to_mortgage_cadence: The can_connect_to_mortgage_cadence of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_connect_to_mortgage_cadence = can_connect_to_mortgage_cadence

    @property
    def can_view_room_details(self):
        """Gets the can_view_room_details of this Permissions.  # noqa: E501


        :return: The can_view_room_details of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_view_room_details

    @can_view_room_details.setter
    def can_view_room_details(self, can_view_room_details):
        """Sets the can_view_room_details of this Permissions.


        :param can_view_room_details: The can_view_room_details of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_view_room_details = can_view_room_details

    @property
    def can_view_and_edit_room_details(self):
        """Gets the can_view_and_edit_room_details of this Permissions.  # noqa: E501


        :return: The can_view_and_edit_room_details of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_view_and_edit_room_details

    @can_view_and_edit_room_details.setter
    def can_view_and_edit_room_details(self, can_view_and_edit_room_details):
        """Sets the can_view_and_edit_room_details of this Permissions.


        :param can_view_and_edit_room_details: The can_view_and_edit_room_details of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_view_and_edit_room_details = can_view_and_edit_room_details

    @property
    def can_send_room_details_to_lone_wolf(self):
        """Gets the can_send_room_details_to_lone_wolf of this Permissions.  # noqa: E501


        :return: The can_send_room_details_to_lone_wolf of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_send_room_details_to_lone_wolf

    @can_send_room_details_to_lone_wolf.setter
    def can_send_room_details_to_lone_wolf(self, can_send_room_details_to_lone_wolf):
        """Sets the can_send_room_details_to_lone_wolf of this Permissions.


        :param can_send_room_details_to_lone_wolf: The can_send_room_details_to_lone_wolf of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_send_room_details_to_lone_wolf = can_send_room_details_to_lone_wolf

    @property
    def can_add_documents(self):
        """Gets the can_add_documents of this Permissions.  # noqa: E501


        :return: The can_add_documents of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_documents

    @can_add_documents.setter
    def can_add_documents(self, can_add_documents):
        """Sets the can_add_documents of this Permissions.


        :param can_add_documents: The can_add_documents of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_add_documents = can_add_documents

    @property
    def can_add_documents_from_form_groups(self):
        """Gets the can_add_documents_from_form_groups of this Permissions.  # noqa: E501


        :return: The can_add_documents_from_form_groups of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_documents_from_form_groups

    @can_add_documents_from_form_groups.setter
    def can_add_documents_from_form_groups(self, can_add_documents_from_form_groups):
        """Sets the can_add_documents_from_form_groups of this Permissions.


        :param can_add_documents_from_form_groups: The can_add_documents_from_form_groups of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_add_documents_from_form_groups = can_add_documents_from_form_groups

    @property
    def can_add_documents_from_form_libraries(self):
        """Gets the can_add_documents_from_form_libraries of this Permissions.  # noqa: E501


        :return: The can_add_documents_from_form_libraries of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_documents_from_form_libraries

    @can_add_documents_from_form_libraries.setter
    def can_add_documents_from_form_libraries(self, can_add_documents_from_form_libraries):
        """Sets the can_add_documents_from_form_libraries of this Permissions.


        :param can_add_documents_from_form_libraries: The can_add_documents_from_form_libraries of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_add_documents_from_form_libraries = can_add_documents_from_form_libraries

    @property
    def documents_viewable_by_others_in_room_from_office(self):
        """Gets the documents_viewable_by_others_in_room_from_office of this Permissions.  # noqa: E501


        :return: The documents_viewable_by_others_in_room_from_office of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._documents_viewable_by_others_in_room_from_office

    @documents_viewable_by_others_in_room_from_office.setter
    def documents_viewable_by_others_in_room_from_office(self, documents_viewable_by_others_in_room_from_office):
        """Sets the documents_viewable_by_others_in_room_from_office of this Permissions.


        :param documents_viewable_by_others_in_room_from_office: The documents_viewable_by_others_in_room_from_office of this Permissions.  # noqa: E501
        :type: bool
        """

        self._documents_viewable_by_others_in_room_from_office = documents_viewable_by_others_in_room_from_office

    @property
    def documents_auto_owned_by_peers(self):
        """Gets the documents_auto_owned_by_peers of this Permissions.  # noqa: E501


        :return: The documents_auto_owned_by_peers of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._documents_auto_owned_by_peers

    @documents_auto_owned_by_peers.setter
    def documents_auto_owned_by_peers(self, documents_auto_owned_by_peers):
        """Sets the documents_auto_owned_by_peers of this Permissions.


        :param documents_auto_owned_by_peers: The documents_auto_owned_by_peers of this Permissions.  # noqa: E501
        :type: bool
        """

        self._documents_auto_owned_by_peers = documents_auto_owned_by_peers

    @property
    def can_delete_owned_documents(self):
        """Gets the can_delete_owned_documents of this Permissions.  # noqa: E501


        :return: The can_delete_owned_documents of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_delete_owned_documents

    @can_delete_owned_documents.setter
    def can_delete_owned_documents(self, can_delete_owned_documents):
        """Sets the can_delete_owned_documents of this Permissions.


        :param can_delete_owned_documents: The can_delete_owned_documents of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_delete_owned_documents = can_delete_owned_documents

    @property
    def can_manage_shared_docs(self):
        """Gets the can_manage_shared_docs of this Permissions.  # noqa: E501


        :return: The can_manage_shared_docs of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_shared_docs

    @can_manage_shared_docs.setter
    def can_manage_shared_docs(self, can_manage_shared_docs):
        """Sets the can_manage_shared_docs of this Permissions.


        :param can_manage_shared_docs: The can_manage_shared_docs of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_shared_docs = can_manage_shared_docs

    @property
    def can_manage_form_groups(self):
        """Gets the can_manage_form_groups of this Permissions.  # noqa: E501


        :return: The can_manage_form_groups of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_form_groups

    @can_manage_form_groups.setter
    def can_manage_form_groups(self, can_manage_form_groups):
        """Sets the can_manage_form_groups of this Permissions.


        :param can_manage_form_groups: The can_manage_form_groups of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_form_groups = can_manage_form_groups

    @property
    def can_share_docs_not_owned(self):
        """Gets the can_share_docs_not_owned of this Permissions.  # noqa: E501


        :return: The can_share_docs_not_owned of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_share_docs_not_owned

    @can_share_docs_not_owned.setter
    def can_share_docs_not_owned(self, can_share_docs_not_owned):
        """Sets the can_share_docs_not_owned of this Permissions.


        :param can_share_docs_not_owned: The can_share_docs_not_owned of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_share_docs_not_owned = can_share_docs_not_owned

    @property
    def can_add_tasks_to_any_task_lists(self):
        """Gets the can_add_tasks_to_any_task_lists of this Permissions.  # noqa: E501


        :return: The can_add_tasks_to_any_task_lists of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_tasks_to_any_task_lists

    @can_add_tasks_to_any_task_lists.setter
    def can_add_tasks_to_any_task_lists(self, can_add_tasks_to_any_task_lists):
        """Sets the can_add_tasks_to_any_task_lists of this Permissions.


        :param can_add_tasks_to_any_task_lists: The can_add_tasks_to_any_task_lists of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_add_tasks_to_any_task_lists = can_add_tasks_to_any_task_lists

    @property
    def can_edit_editable_tasks(self):
        """Gets the can_edit_editable_tasks of this Permissions.  # noqa: E501


        :return: The can_edit_editable_tasks of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_edit_editable_tasks

    @can_edit_editable_tasks.setter
    def can_edit_editable_tasks(self, can_edit_editable_tasks):
        """Sets the can_edit_editable_tasks of this Permissions.


        :param can_edit_editable_tasks: The can_edit_editable_tasks of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_edit_editable_tasks = can_edit_editable_tasks

    @property
    def can_edit_any_tasks(self):
        """Gets the can_edit_any_tasks of this Permissions.  # noqa: E501


        :return: The can_edit_any_tasks of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_edit_any_tasks

    @can_edit_any_tasks.setter
    def can_edit_any_tasks(self, can_edit_any_tasks):
        """Sets the can_edit_any_tasks of this Permissions.


        :param can_edit_any_tasks: The can_edit_any_tasks of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_edit_any_tasks = can_edit_any_tasks

    @property
    def can_delete_deletable_tasks(self):
        """Gets the can_delete_deletable_tasks of this Permissions.  # noqa: E501


        :return: The can_delete_deletable_tasks of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_delete_deletable_tasks

    @can_delete_deletable_tasks.setter
    def can_delete_deletable_tasks(self, can_delete_deletable_tasks):
        """Sets the can_delete_deletable_tasks of this Permissions.


        :param can_delete_deletable_tasks: The can_delete_deletable_tasks of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_delete_deletable_tasks = can_delete_deletable_tasks

    @property
    def can_delete_any_tasks(self):
        """Gets the can_delete_any_tasks of this Permissions.  # noqa: E501


        :return: The can_delete_any_tasks of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_delete_any_tasks

    @can_delete_any_tasks.setter
    def can_delete_any_tasks(self, can_delete_any_tasks):
        """Sets the can_delete_any_tasks of this Permissions.


        :param can_delete_any_tasks: The can_delete_any_tasks of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_delete_any_tasks = can_delete_any_tasks

    @property
    def can_apply_task_list(self):
        """Gets the can_apply_task_list of this Permissions.  # noqa: E501


        :return: The can_apply_task_list of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_apply_task_list

    @can_apply_task_list.setter
    def can_apply_task_list(self, can_apply_task_list):
        """Sets the can_apply_task_list of this Permissions.


        :param can_apply_task_list: The can_apply_task_list of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_apply_task_list = can_apply_task_list

    @property
    def can_remove_any_task_list(self):
        """Gets the can_remove_any_task_list of this Permissions.  # noqa: E501


        :return: The can_remove_any_task_list of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_remove_any_task_list

    @can_remove_any_task_list.setter
    def can_remove_any_task_list(self, can_remove_any_task_list):
        """Sets the can_remove_any_task_list of this Permissions.


        :param can_remove_any_task_list: The can_remove_any_task_list of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_remove_any_task_list = can_remove_any_task_list

    @property
    def can_submit_task_list(self):
        """Gets the can_submit_task_list of this Permissions.  # noqa: E501


        :return: The can_submit_task_list of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_submit_task_list

    @can_submit_task_list.setter
    def can_submit_task_list(self, can_submit_task_list):
        """Sets the can_submit_task_list of this Permissions.


        :param can_submit_task_list: The can_submit_task_list of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_submit_task_list = can_submit_task_list

    @property
    def can_auto_submit_task_list(self):
        """Gets the can_auto_submit_task_list of this Permissions.  # noqa: E501


        :return: The can_auto_submit_task_list of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_auto_submit_task_list

    @can_auto_submit_task_list.setter
    def can_auto_submit_task_list(self, can_auto_submit_task_list):
        """Sets the can_auto_submit_task_list of this Permissions.


        :param can_auto_submit_task_list: The can_auto_submit_task_list of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_auto_submit_task_list = can_auto_submit_task_list

    @property
    def can_review_task_list(self):
        """Gets the can_review_task_list of this Permissions.  # noqa: E501


        :return: The can_review_task_list of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_review_task_list

    @can_review_task_list.setter
    def can_review_task_list(self, can_review_task_list):
        """Sets the can_review_task_list of this Permissions.


        :param can_review_task_list: The can_review_task_list of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_review_task_list = can_review_task_list

    @property
    def can_auto_approve_task_list(self):
        """Gets the can_auto_approve_task_list of this Permissions.  # noqa: E501


        :return: The can_auto_approve_task_list of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_auto_approve_task_list

    @can_auto_approve_task_list.setter
    def can_auto_approve_task_list(self, can_auto_approve_task_list):
        """Sets the can_auto_approve_task_list of this Permissions.


        :param can_auto_approve_task_list: The can_auto_approve_task_list of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_auto_approve_task_list = can_auto_approve_task_list

    @property
    def can_manage_task_templates_for_all_regions_all_offices(self):
        """Gets the can_manage_task_templates_for_all_regions_all_offices of this Permissions.  # noqa: E501


        :return: The can_manage_task_templates_for_all_regions_all_offices of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_task_templates_for_all_regions_all_offices

    @can_manage_task_templates_for_all_regions_all_offices.setter
    def can_manage_task_templates_for_all_regions_all_offices(self, can_manage_task_templates_for_all_regions_all_offices):
        """Sets the can_manage_task_templates_for_all_regions_all_offices of this Permissions.


        :param can_manage_task_templates_for_all_regions_all_offices: The can_manage_task_templates_for_all_regions_all_offices of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_task_templates_for_all_regions_all_offices = can_manage_task_templates_for_all_regions_all_offices

    @property
    def can_apply_room_templates(self):
        """Gets the can_apply_room_templates of this Permissions.  # noqa: E501


        :return: The can_apply_room_templates of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_apply_room_templates

    @can_apply_room_templates.setter
    def can_apply_room_templates(self, can_apply_room_templates):
        """Sets the can_apply_room_templates of this Permissions.


        :param can_apply_room_templates: The can_apply_room_templates of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_apply_room_templates = can_apply_room_templates

    @property
    def can_add_tasks_to_rooms(self):
        """Gets the can_add_tasks_to_rooms of this Permissions.  # noqa: E501


        :return: The can_add_tasks_to_rooms of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_tasks_to_rooms

    @can_add_tasks_to_rooms.setter
    def can_add_tasks_to_rooms(self, can_add_tasks_to_rooms):
        """Sets the can_add_tasks_to_rooms of this Permissions.


        :param can_add_tasks_to_rooms: The can_add_tasks_to_rooms of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_add_tasks_to_rooms = can_add_tasks_to_rooms

    @property
    def can_review_any_task(self):
        """Gets the can_review_any_task of this Permissions.  # noqa: E501


        :return: The can_review_any_task of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_review_any_task

    @can_review_any_task.setter
    def can_review_any_task(self, can_review_any_task):
        """Sets the can_review_any_task of this Permissions.


        :param can_review_any_task: The can_review_any_task of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_review_any_task = can_review_any_task

    @property
    def can_manage_docs_on_any_task(self):
        """Gets the can_manage_docs_on_any_task of this Permissions.  # noqa: E501


        :return: The can_manage_docs_on_any_task of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_docs_on_any_task

    @can_manage_docs_on_any_task.setter
    def can_manage_docs_on_any_task(self, can_manage_docs_on_any_task):
        """Sets the can_manage_docs_on_any_task of this Permissions.


        :param can_manage_docs_on_any_task: The can_manage_docs_on_any_task of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_docs_on_any_task = can_manage_docs_on_any_task

    @property
    def can_add_member_and_set_role_lower_access_level(self):
        """Gets the can_add_member_and_set_role_lower_access_level of this Permissions.  # noqa: E501


        :return: The can_add_member_and_set_role_lower_access_level of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_member_and_set_role_lower_access_level

    @can_add_member_and_set_role_lower_access_level.setter
    def can_add_member_and_set_role_lower_access_level(self, can_add_member_and_set_role_lower_access_level):
        """Sets the can_add_member_and_set_role_lower_access_level of this Permissions.


        :param can_add_member_and_set_role_lower_access_level: The can_add_member_and_set_role_lower_access_level of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_add_member_and_set_role_lower_access_level = can_add_member_and_set_role_lower_access_level

    @property
    def can_add_member_and_set_role_same_access_level(self):
        """Gets the can_add_member_and_set_role_same_access_level of this Permissions.  # noqa: E501


        :return: The can_add_member_and_set_role_same_access_level of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_member_and_set_role_same_access_level

    @can_add_member_and_set_role_same_access_level.setter
    def can_add_member_and_set_role_same_access_level(self, can_add_member_and_set_role_same_access_level):
        """Sets the can_add_member_and_set_role_same_access_level of this Permissions.


        :param can_add_member_and_set_role_same_access_level: The can_add_member_and_set_role_same_access_level of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_add_member_and_set_role_same_access_level = can_add_member_and_set_role_same_access_level

    @property
    def can_change_member_role_lower_access_level(self):
        """Gets the can_change_member_role_lower_access_level of this Permissions.  # noqa: E501


        :return: The can_change_member_role_lower_access_level of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_change_member_role_lower_access_level

    @can_change_member_role_lower_access_level.setter
    def can_change_member_role_lower_access_level(self, can_change_member_role_lower_access_level):
        """Sets the can_change_member_role_lower_access_level of this Permissions.


        :param can_change_member_role_lower_access_level: The can_change_member_role_lower_access_level of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_change_member_role_lower_access_level = can_change_member_role_lower_access_level

    @property
    def can_change_member_role_same_access_level(self):
        """Gets the can_change_member_role_same_access_level of this Permissions.  # noqa: E501


        :return: The can_change_member_role_same_access_level of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_change_member_role_same_access_level

    @can_change_member_role_same_access_level.setter
    def can_change_member_role_same_access_level(self, can_change_member_role_same_access_level):
        """Sets the can_change_member_role_same_access_level of this Permissions.


        :param can_change_member_role_same_access_level: The can_change_member_role_same_access_level of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_change_member_role_same_access_level = can_change_member_role_same_access_level

    @property
    def can_manage_member_lower_access_level(self):
        """Gets the can_manage_member_lower_access_level of this Permissions.  # noqa: E501


        :return: The can_manage_member_lower_access_level of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_member_lower_access_level

    @can_manage_member_lower_access_level.setter
    def can_manage_member_lower_access_level(self, can_manage_member_lower_access_level):
        """Sets the can_manage_member_lower_access_level of this Permissions.


        :param can_manage_member_lower_access_level: The can_manage_member_lower_access_level of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_member_lower_access_level = can_manage_member_lower_access_level

    @property
    def can_manage_member_same_access_level(self):
        """Gets the can_manage_member_same_access_level of this Permissions.  # noqa: E501


        :return: The can_manage_member_same_access_level of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_member_same_access_level

    @can_manage_member_same_access_level.setter
    def can_manage_member_same_access_level(self, can_manage_member_same_access_level):
        """Sets the can_manage_member_same_access_level of this Permissions.


        :param can_manage_member_same_access_level: The can_manage_member_same_access_level of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_member_same_access_level = can_manage_member_same_access_level

    @property
    def can_remove_company_member_lower_access_level(self):
        """Gets the can_remove_company_member_lower_access_level of this Permissions.  # noqa: E501


        :return: The can_remove_company_member_lower_access_level of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_remove_company_member_lower_access_level

    @can_remove_company_member_lower_access_level.setter
    def can_remove_company_member_lower_access_level(self, can_remove_company_member_lower_access_level):
        """Sets the can_remove_company_member_lower_access_level of this Permissions.


        :param can_remove_company_member_lower_access_level: The can_remove_company_member_lower_access_level of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_remove_company_member_lower_access_level = can_remove_company_member_lower_access_level

    @property
    def can_remove_company_member_same_access_level(self):
        """Gets the can_remove_company_member_same_access_level of this Permissions.  # noqa: E501


        :return: The can_remove_company_member_same_access_level of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_remove_company_member_same_access_level

    @can_remove_company_member_same_access_level.setter
    def can_remove_company_member_same_access_level(self, can_remove_company_member_same_access_level):
        """Sets the can_remove_company_member_same_access_level of this Permissions.


        :param can_remove_company_member_same_access_level: The can_remove_company_member_same_access_level of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_remove_company_member_same_access_level = can_remove_company_member_same_access_level

    @property
    def can_manage_account(self):
        """Gets the can_manage_account of this Permissions.  # noqa: E501


        :return: The can_manage_account of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_account

    @can_manage_account.setter
    def can_manage_account(self, can_manage_account):
        """Sets the can_manage_account of this Permissions.


        :param can_manage_account: The can_manage_account of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_account = can_manage_account

    @property
    def can_manage_logo(self):
        """Gets the can_manage_logo of this Permissions.  # noqa: E501


        :return: The can_manage_logo of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_logo

    @can_manage_logo.setter
    def can_manage_logo(self, can_manage_logo):
        """Sets the can_manage_logo of this Permissions.


        :param can_manage_logo: The can_manage_logo of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_logo = can_manage_logo

    @property
    def can_manage_roles_and_permissions(self):
        """Gets the can_manage_roles_and_permissions of this Permissions.  # noqa: E501


        :return: The can_manage_roles_and_permissions of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_roles_and_permissions

    @can_manage_roles_and_permissions.setter
    def can_manage_roles_and_permissions(self, can_manage_roles_and_permissions):
        """Sets the can_manage_roles_and_permissions of this Permissions.


        :param can_manage_roles_and_permissions: The can_manage_roles_and_permissions of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_roles_and_permissions = can_manage_roles_and_permissions

    @property
    def can_manage_room_details(self):
        """Gets the can_manage_room_details of this Permissions.  # noqa: E501


        :return: The can_manage_room_details of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_room_details

    @can_manage_room_details.setter
    def can_manage_room_details(self, can_manage_room_details):
        """Sets the can_manage_room_details of this Permissions.


        :param can_manage_room_details: The can_manage_room_details of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_room_details = can_manage_room_details

    @property
    def can_manage_room_templates(self):
        """Gets the can_manage_room_templates of this Permissions.  # noqa: E501


        :return: The can_manage_room_templates of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_room_templates

    @can_manage_room_templates.setter
    def can_manage_room_templates(self, can_manage_room_templates):
        """Sets the can_manage_room_templates of this Permissions.


        :param can_manage_room_templates: The can_manage_room_templates of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_room_templates = can_manage_room_templates

    @property
    def can_manage_integration_settings(self):
        """Gets the can_manage_integration_settings of this Permissions.  # noqa: E501


        :return: The can_manage_integration_settings of this Permissions.  # noqa: E501
        :rtype: bool
        """
        return self._can_manage_integration_settings

    @can_manage_integration_settings.setter
    def can_manage_integration_settings(self, can_manage_integration_settings):
        """Sets the can_manage_integration_settings of this Permissions.


        :param can_manage_integration_settings: The can_manage_integration_settings of this Permissions.  # noqa: E501
        :type: bool
        """

        self._can_manage_integration_settings = can_manage_integration_settings

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Permissions, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Permissions):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
